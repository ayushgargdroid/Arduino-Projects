
NandDemo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000b0  00000124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000124  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000138  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 56 00 	jmp	0xac	; 0xac <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
  6c:	b8 9a       	sbi	0x17, 0	; 23
  6e:	81 b3       	in	r24, 0x11	; 17
  70:	80 63       	ori	r24, 0x30	; 48
  72:	81 bb       	out	0x11, r24	; 17
  74:	8f b5       	in	r24, 0x2f	; 47
  76:	82 6a       	ori	r24, 0xA2	; 162
  78:	8f bd       	out	0x2f, r24	; 47
  7a:	8e b5       	in	r24, 0x2e	; 46
  7c:	89 61       	ori	r24, 0x19	; 25
  7e:	8e bd       	out	0x2e, r24	; 46
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	97 bd       	out	0x27, r25	; 39
  86:	86 bd       	out	0x26, r24	; 38
  88:	28 ec       	ldi	r18, 0xC8	; 200
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	82 e3       	ldi	r24, 0x32	; 50
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	39 bd       	out	0x29, r19	; 41
  92:	28 bd       	out	0x28, r18	; 40
  94:	4f e3       	ldi	r20, 0x3F	; 63
  96:	5d e0       	ldi	r21, 0x0D	; 13
  98:	63 e0       	ldi	r22, 0x03	; 3
  9a:	41 50       	subi	r20, 0x01	; 1
  9c:	50 40       	sbci	r21, 0x00	; 0
  9e:	60 40       	sbci	r22, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
  a6:	99 bd       	out	0x29, r25	; 41
  a8:	88 bd       	out	0x28, r24	; 40
  aa:	f2 cf       	rjmp	.-28     	; 0x90 <main+0x24>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>
