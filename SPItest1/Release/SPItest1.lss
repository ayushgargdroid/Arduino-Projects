
SPItest1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000d8  0000014c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000160  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <masterInit>:
  6c:	87 b3       	in	r24, 0x17	; 23
  6e:	80 6a       	ori	r24, 0xA0	; 160
  70:	87 bb       	out	0x17, r24	; 23
  72:	88 b3       	in	r24, 0x18	; 24
  74:	82 61       	ori	r24, 0x12	; 18
  76:	88 bb       	out	0x18, r24	; 24
  78:	8d b1       	in	r24, 0x0d	; 13
  7a:	80 65       	ori	r24, 0x50	; 80
  7c:	8d b9       	out	0x0d, r24	; 13
  7e:	08 95       	ret

00000080 <slaveInit>:
  80:	be 9a       	sbi	0x17, 6	; 23
  82:	6e 9a       	sbi	0x0d, 6	; 13
  84:	08 95       	ret

00000086 <transmitOn>:
  86:	c2 9a       	sbi	0x18, 2	; 24
  88:	81 e4       	ldi	r24, 0x41	; 65
  8a:	8f b9       	out	0x0f, r24	; 15
  8c:	77 9b       	sbis	0x0e, 7	; 14
  8e:	fe cf       	rjmp	.-4      	; 0x8c <transmitOn+0x6>
  90:	87 ea       	ldi	r24, 0xA7	; 167
  92:	91 e6       	ldi	r25, 0x61	; 97
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <transmitOn+0xe>
  98:	00 c0       	rjmp	.+0      	; 0x9a <transmitOn+0x14>
  9a:	00 00       	nop
  9c:	c2 98       	cbi	0x18, 2	; 24
  9e:	08 95       	ret

000000a0 <receive>:
  a0:	c2 9a       	sbi	0x18, 2	; 24
  a2:	77 9b       	sbis	0x0e, 7	; 14
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <receive+0x2>
  a6:	8f b1       	in	r24, 0x0f	; 15
  a8:	81 34       	cpi	r24, 0x41	; 65
  aa:	21 f4       	brne	.+8      	; 0xb4 <receive+0x14>
  ac:	98 b3       	in	r25, 0x18	; 24
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	89 27       	eor	r24, r25
  b2:	88 bb       	out	0x18, r24	; 24
  b4:	87 ea       	ldi	r24, 0xA7	; 167
  b6:	91 e6       	ldi	r25, 0x61	; 97
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <receive+0x18>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <receive+0x1e>
  be:	00 00       	nop
  c0:	c2 98       	cbi	0x18, 2	; 24
  c2:	08 95       	ret

000000c4 <main>:
  c4:	87 b3       	in	r24, 0x17	; 23
  c6:	85 60       	ori	r24, 0x05	; 5
  c8:	87 bb       	out	0x17, r24	; 23
  ca:	0e 94 40 00 	call	0x80	; 0x80 <slaveInit>
  ce:	0e 94 50 00 	call	0xa0	; 0xa0 <receive>
  d2:	fd cf       	rjmp	.-6      	; 0xce <main+0xa>

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
